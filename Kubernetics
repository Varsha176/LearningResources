**************************************************************************************************************************
Resources
Beginner concepts: Raghav Pal YouTube channel.
Hands-on practice: https://www.youtube.com/watch?v=rBeyHDKLVqM
Advance - Abhishek Veramalla
**************************************************************************************************************************


1. What is Kubernetes
Kubernetes is a container management tool that helps in automated deploying, scheduling, auto-scaling, load balancing, monitoring and bach execution of containerized applications.
It is written in Go lang.

2. what is docker and what is kubernatics?
ans: Docker is a container platform while Kubernetes is a container orchestration platform. 
Problems with docker:--
1.1 Single Host Nature
In docker, there is one host on which we install docker and create containers so containers can impact each other.
1.2 Self healing is missing
If any container is down then application is also down and there is no way to automatically up the container in docker.
1.3 Auto scaling is missing

How Kubernatics solve these problems?
1.1 Kubernatics uses clusters (server node architecture) hence impacting containers can be shifted to different nodes.
1.2 Auto healing is there.
1.3 Auto scaling can be done using yaml file(manually) or using HPA(hORIZONtal pod autoscale) 

3. What is the secret and config map in Kubernetes?
A secret is a Kubernetes object used to store sensitive info like keys/tokens/passwords. Config map objects are used to store configuration information.
Both are stored in a key-value datastore outside the pod. Max limit for secret is 1 MB.

4. How is auto-scaling done in Kubernetes?
Kubernetes supports horizontal Autoscaling. Replicas of pods can be created using a replication controller that reads the manifest file and creates replicas according to the numbers provided.
replication controller makes sure that the number of pods always exists.
Horizontal pod scaler(HPA) is another way of creating replica of pods. HPA monitors the cpu utilization and on the basis of that send the message to replication controller to create new pods.

**************************************************************************************************************************
Kubernetics arhicetecture

Server node == control plane and worker node == data plane.
Pods are similar to containers just have some more capabilities than containers.
worker node/data plane has 3 components:Can be any physical or virtual machine.
  |----Container runtime (responsible for running the pod ), responsible for managing and running a container's lifecycle.
  2----Kubectl (Responsible for checking if the pod is running or not(auto-healing)), runs on each worker node and communicates with the components of master node.
  3----kubeProxy (Responsible for assigning network to pods(like ip addresses,ports)), responsible for maintaining and configuring network rules.
kubectl and Kube proxy interact with api server of the master node.

Servernode/Control plane components:
   1 ---core component name as 'API server' which exposes the Kubernetes cluster to the external world, meaning takes and process all the requests.
   2 --- Cube scheduler (recieves info from API server and then schedules the pod creation on diff nodes).
   3 --- etcd -- stores entire cluster info in form of key-value pair.
   4 --- Controller manager has 2 parts
4.1 Kube controller - responsible for overall health of the cluster, correct no of pods are running as per spec file.
4.2 Cloud controller(not required for on-premise cluster, only required for running kubernatics on cloud platforms like aws,azure)

Only api server communicates with the etcd data store. etcd datastore can be configured inside the master node or externally. 

Pod Vs Container
*********************************
1. Pod is the smallest deployable unit in Kubernetics. Pod can contain multiple containers.
2. Kubernetics provide ip to pod not to the containers.(Kube-proxy responsible for assigning IP to pods).
3. Containers within pods can share data volume but containers among diff pods cant share data volumes.
4. pods can not communicate with each other.
5. Kubernetcis alternative is docker-swarm.
6. Kubernetics supports auto scaling & auto healing, which is not supported by docker-swarm.


Replica set vs Deamen set
*********************************
https://sysdig.com/learn-cloud-native/kubernetes-101/kubernetes-replicasets-overview
https://semaphoreci.com/blog/replicaset-statefulset-daemonset-deployments
******************************************************************************************************************************************************************************************************
Basic kubectl commands

kubectl cluster-info --gives complete information about cluster.
kubectl get nodes -- to show all nodes
kubectl get pods 
kubectl get services
kubectl create deploment name --image = imagename
kubectl rollout deployement deployment name
kubectl scal deployment name --replicas=5


