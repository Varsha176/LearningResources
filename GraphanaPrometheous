high-level application architecture of a virtual global e-commerce service 
***************************************************************************
https://scaleyourapp.com/web-service/

*******************************YouTube Playlist****************************************************
https://www.youtube.com/playlist?list=PLTnw6NC76Hn7upiWa8xyEQ3lsJbRcF5Ou (Hindi, very good explanation)
https://www.youtube.com/playlist?list=PLVCgi5HZ0-Ytx5J5fp7A4HG5HreQ-7ZMg (Good for try by yourself)
https://www.youtube.com/playlist?list=PLGyKZJoyKdOdx8Nt1G0rZYfYh8YnY9RPk (with github repo, already cooked code)
************************************************************************************************************************

     Text-based resources for setup
https://www.linode.com/docs/guides/how-to-install-prometheus-and-grafana-on-ubuntu/ (Used successfully)
https://antonputra.com/monitoring/install-prometheus-and-grafana-on-ubuntu/

******************************
What are time series databases?
1)https://www.youtube.com/watch?v=4Dh6ytwB-no
2)https://www.youtube.com/watch?v=vuNEWixlsWY

******************************
Prometheus vs Graphana
1)https://www.zerok.ai/post/prometheus-vs-grafana-in-2023
2)https://last9.io/blog/prometheus-and-grafana/
3)https://prometheus.io/docs/tutorials/alerting_based_on_metrics/
4)https://www.sumologic.com/blog/prometheus-vs-grafana/

1. What is prometheus

Prometheus is an open-source monitoring system, written in Go that collects metrics data and stores that data in a time series database.
it is a pull-based tool. It collects metrics of the target system using HTTP, stores them locally or remotely and displays them back in the Prometheus server.
Prometheus server then scrapes the metrics based on the time interval we defined and stores it in a time-series database.Prometheus.yaml file used for this.
We use Promql to show the status of one target at a particular time.

4 metrics type
1.Counter--only inc or rest to zero.Use cases for counter include request count, tasks completed, and error count.
2.Gauge--Record a value that goes up and down ex temp, memory usage.rate() function can not be used with this.
3.History
4.Summary
https://www.tigera.io/learn/guides/prometheus-monitoring/prometheus-metrics/
https://www.timescale.com/blog/four-types-prometheus-metrics-to-collect/ 


**********************Uninstall Prometheus********************
https://webhostinggeeks.com/howto/how-to-uninstall-prometheus-on-ubuntu/

how to do?
follow in same order
https://www.linode.com/docs/guides/how-to-install-prometheus-and-grafana-on-ubuntu/ (follow this)
https://www.youtube.com/playlist?list=PLTnw6NC76Hn7upiWa8xyEQ3lsJbRcF5Ou (refer this)
https://www.youtube.com/playlist?list=PLVCgi5HZ0-Ytx5J5fp7A4HG5HreQ-7ZMg (refer)
https://www.youtube.com/@PromLabs/playlists (to understand the metrics)

https://www.youtube.com/watch?v=hvACEDjHQZE (To understand PromQL)

PromQL Workshop
https://o11y-workshops.gitlab.io/workshop-prometheus/lab04.html
https://o11y-workshops.gitlab.io/workshop-prometheus/lab05.html
https://www.youtube.com/playlist?list=PLyBW7UHmEXgylLwxdVbrBQJ-fJ_jMvh8h

good resource 
https://www.youtube.com/playlist?list=PLYiz2chG5MSFnyfigVs8yxhCBXpja6wJd

***************************************************************************
Terminology used in Dashboards

What is Failure rate?
total number of requests failed per minute.

total requests-- total number of requests served by a pod

Latency + Processing Time = Response Time, for example:
A package has been sent from A-B-C where A-B took 10 sec, B (processing) took 5 sec, B-C took 10 sec
Latency = (10 + 10) sec = 20 sec
Response time = (10 + 5 + 10) sec = 25 sec

https://www.perfmatrix.com/latency-bandwidth-throughput-and-response-time/

InBound: It accepts the request and processing it. (Travelling towards)

OutBound: when it hit the other 3rd party service.



