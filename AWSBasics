AWS S3 and EC2--Abhishek verramalla
AWS Cloud formation ---Arbind Mahato
https://www.youtube.com/playlist?list=PL7foQG1Y7xk-hVhybQrhODchrOvtfY_bk
https://cloud.in28minutes.com/aws-certification-devops-in-aws-cloudformation-vs-codepipeline-vs-opsworks
*******************************
EC2
*******************************
If EC2 is Terminated then the attached volume is also terminated, however, this behaviour can be changed in the advance setting option.
A security group can be attached to multiple instances, similarly, an instance can have multiple security groups.

https://aws.amazon.com/ec2/instance-types/


*******************************
1. Introduction to Cloudformation
******************************
What is AWS CloudFormation?
----------------------------
AWS CloudFormation is a service that helps you model and set up your AWS resources so that you can spend less time managing those resources and more time focusing on your applications that run in AWS. 
You create a template that describes all the AWS resources that you want (like Amazon EC2 instances or Amazon RDS DB instances), and CloudFormation takes care of provisioning and configuring those resources for you. 
You don't need to individually create and configure AWS resources and figure out what's dependent on what; CloudFormation handles that. 
The following scenarios demonstrate how CloudFormation can help. Simplify infrastructure management Quickly replicate your infrastructure easily control and track changes to your infrastructure.

Define the AWS CloudFormation concepts.
*****************************************
When you use AWS CloudFormation, you work with templates and stacks. You create templates to describe your AWS resources and their properties. 
Whenever you create a stack, CloudFormation provisions the resources that are described in your template.

What is the AWS Cloudformation Template?
***********************************
A CloudFormation template is a JSON or YAML formatted text file. 
You can save these files with any extension, such as .json, .yaml, .template, or .txt. 
CloudFormation uses these templates as blueprints for building your AWS resources. 
For example, in a template, you can describe an Amazon EC2 instance, such as the instance type, the AMI ID, block device mappings, and its Amazon EC2 key pair name. 
Whenever you create a stack, you also specify a template that CloudFormation uses to create whatever you described in the template.
For example, if you created a stack with the following template, CloudFormation provisions an instance with an ami-0ff8a91507f77f867 AMI ID, t2.micro instance type, test key key pair name, and an Amazon EBS volume.

What is AWS Cloudformation Stack?
**********************************
When you use CloudFormation, you manage related resources as a single unit called a stack. 
You create, update, and delete a collection of resources by creating, updating, and deleting stacks. 
All the resources in a stack are defined by the stack's CloudFormation template. 
Suppose you created a template that includes an Auto Scaling group, Elastic Load Balancing load balancer, and an Amazon Relational Database Service (Amazon RDS) database instance. 
To create those resources, you create a stack by submitting the template that you created, and CloudFormation provisions all those resources for you. 
You can work with stacks by using the CloudFormation console, API, or AWS CLI.

What is AWS Cloudformation Change sets?
**************************************
If you need to make changes to the running resources in a stack, you update the stack. 
Before making changes to your resources, you can generate a change set, which is a summary of your proposed changes. 
Change sets allow you to see how your changes might impact your running resources, especially critical resources, before implementing them. For example, if you change the name of an Amazon RDS database instance, CloudFormation will create a new database and delete the old one. You will lose the data in the old database unless you've already backed it up. If you generate a change set, you will see that your change will cause your database to be replaced, and you will be able to plan accordingly before you update your stack.
Learn More: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/Welcome.html
https://www.youtube.com/watch?v=t97jZch4lMY&list=PLEiEAq2VkUUKXeR-3MjkhbU4NOvF_s-4U&index=7

**************************************
2. AWS CDK and construct
**************************************
1. https://www.youtube.com/watch?v=LU5VgGWO9zw
2. https://www.youtube.com/watch?v=nlb8yo7SZ2I
3. https://www.youtube.com/watch?v=I_ftyDeHffE


diff between cdk and lambda
https://joelotepawembo.medium.com/difference-between-aws-cdk-lambda-and-serverless-lambda-34b2ce6abe5b

**************************************
3. AWS Codebuild
**************************************
Jenkins vs AWS Codebuild
https://jenkinshero.com/jenkins-vs-aws-codebuild-for-building-docker-images/

 What is codebuild?
a ci service that compiles executes and deploys (considered similar to Jenkins)
https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html

what is code commit--private repo service (similar to GitHub)

what is a code pipeline?- A cd tool that is used to automate the release(similar to github actions)

https://digital-alpha.com/comparison-between-aws-codebuild-and-aws-codepipeline/

**************************************
4. AWS Lambda
**************************************
used for infra provisioning using functions rather than manual.
https://www.youtube.com/watch?v=97q30JjEq9Y




